@page "/shareables"
@using MegaSchool1.Components
@using MegaSchool1.Model
@using MegaSchool1.Model.Repository
@using Content = MegaSchool1.Model.Content
@using Microsoft.FeatureManagement
@using Shareable = MegaSchool1.Components.Shareable
@using Foundation.UI.Components
@inherits PageBase
@inject UISettings UI
@inject IFeatureManager FeatureManager

<MudStack Spacing="3">
    <MudCard>
        <MudCardContent>
            <MudStack Spacing="6">
                <MudSelect T="Content" Label="@($"Tap Here! {Constants.JeromePointingDownEmoji}")" @bind-Value="_selectedShareable" ToStringFunc="@(content => ShareableTitle(content))" Variant="MudBlazor.Variant.Outlined" Style="width:300px;">
                    @foreach (var content in GetSelectedContent([_selectedCategory]))
                    {
                        <MudSelectItem Value="@content" />
                    }
                </MudSelect>
                <ShareableVideo Content="_selectedShareable"/>
                @if(Fundable360Shareables.Contains(_selectedShareable))
                {
                    <Fundable360CapturePageShareable/>
                }
                <MudCard Outlined="true">
                    <MudCardContent>
                        <Centered>
                            <MudStack>
                                <MudStack>
                                    <ExternalLink Href="https://mwropportunity.com">MWRopportunity.com</ExternalLink>
                                    <ExternalLink Href="https://mwrleveragesimulator.com">MWRleveragesimulator.com</ExternalLink>
                                    <ExternalLink Href="https://mwrincomesimulator.com">MWRincomesimulator.com</ExternalLink>
                                    <ExternalLink Href="https://mwrcredibility.com">MWRcredibility.com</ExternalLink>
                                    <Loader Loaded="@(_selectedTeamMemberMarketingDirector != null)">
                                        <ExternalLink Href="@Constants.JoinMakeWealthReal(_selectedTeamMemberMarketingDirector?.MemberId!, Language.English)">My Enrollment Link</ExternalLink>
                                    </Loader>
                                </MudStack>
                            </MudStack>
                        </Centered>
                    </MudCardContent>
                </MudCard>
                @if (_selectedShareable == Content.CorporateBusinessOverview)
                {
                    <MudCard Outlined="true">
                        <MudCardContent>
                            <Centered>
                                <MudStack>
                                    <MudStack Row="true">
                                        <ExternalLink Href="http://mwrvip.com">English Presentation</ExternalLink>
                                        <ExternalLink Href="http://mwrvisp.com">Spanish Presentation</ExternalLink>
                                    </MudStack>
                                    <MudDivider/>
                                    <ExternalLink Href="https://www.dropbox.com/t/8R8DkkzgUf111GL6">Presentation Script</ExternalLink>
                                </MudStack>
                            </Centered>
                        </MudCardContent>
                    </MudCard>
                }
                <Centered>
                    <MudChipSet T="Category" SelectedValue="_selectedCategory" SelectedValueChanged="SelectedCategoryChanged" SelectedValues="_selectedCategories" SelectedValuesChanged="SelectedCategoriesChanged" SelectionMode="SelectionMode.SingleSelection" CheckMark="true">
                        @foreach(var filterableValue in Categories)
                        {
                            <MudChip Value="@filterableValue.Category" Text="@(filterableValue.Description)" Color="Color.Primary" SelectedColor="Color.Secondary" />
                        }
                    </MudChipSet>
                </Centered>
            </MudStack>
        </MudCardContent>
    </MudCard>
    
    <MudDivider/>
    @if (_enableExperimentalFeatures)
    {
        <div class="d-none">
            <MembershipTrainings/>
            <MudDivider/>    
        </div>   
    }
    <div class="d-none">
        <Collapsable Title="Everything Else">
            <MudCard>
                <MudCardHeader>
                    <MudText Align="Align.Center" Style="width:100%;">Video Shareable</MudText>
                </MudCardHeader>
                <MudCardContent>
                    <MudStack Spacing="3">
                        <MudSelect T="Content" Label="@("Tap Here! {Constants.JeromePointingDownEmoji}")" @bind-Value="_selectedInCompleteVideoLibrary" ToStringFunc="@(content => ShareableTitle(content))" Variant="MudBlazor.Variant.Outlined" Style="width:300px;">
                            @foreach (var content in Constants.OrderedContent.Where(c => UI.EnglishLocale[c] is { Platform: not VideoPlatform.None, ContentId: not Content.Custom }).OrderBy(c => ShareableTitle(c)))
                            {
                                <MudSelectItem Value="@content" />
                            }
                        </MudSelect>
                        <ShareableVideo Content="_selectedInCompleteVideoLibrary"/>
                    </MudStack>
                </MudCardContent>
            </MudCard>
        </Collapsable>
    </div>
    <div class="d-none">
        <Collapsable Title="Essentials" ExpandPrompt="Show">
            <StrategyChooser>
                <MudTabPanel Tag="@Strategy.MegaSchool">
                    <Loader Loaded="@(_megaSchoolEssentials.TeamMember != null)">
                        <TeamMemberPicker Description="Capture Page For:" User="AppState?.User" @bind-SelectedTeamMember="_megaSchoolEssentials.TeamMember">
                            <MudSelect T="Content" Label="Capture Page" @bind-Value="_megaSchoolEssentials.Content" ToStringFunc="@(content => (UI.EnglishLocale[content]?.AppTitle ?? content.ToString()).Replace("<br/>", " "))" Variant="MudBlazor.Variant.Outlined" Style="width:300px;">
                                @foreach (var content in new Content[] { Content.GivBux, Content.EDMGivBux, Content.GivBuxCharity, Content.GivBuxMerchant, Content.MS1Opportunity, Content.GivBuxFundraiser })
                                {
                                    <MudSelectItem Value="@content" />
                                }
                            </MudSelect>
                            <CapturePage Content="_megaSchoolEssentials.Content" TeamMember="_megaSchoolEssentials.TeamMember" />
                        </TeamMemberPicker>
                    </Loader>
                </MudTabPanel>
                <MudTabPanel Tag="@Strategy.Corporate">
                    <MudStack>
                        <Loader Loaded="@(_corporateEssentials.TeamMember != null)">
                            <TeamMemberPicker Description="Shareable For:" User="AppState?.User" @bind-SelectedTeamMember="_corporateEssentials.TeamMember">
                                <MudSelect T="Content" Label="Shareable" @bind-Value="_corporateEssentials.Content" ToStringFunc="@(content => (UI.EnglishLocale[content]?.AppTitle ?? content.ToString()).Replace("<br/>", " "))" Variant="MudBlazor.Variant.Outlined" Style="width:300px;">
                                    @foreach (var content in new Content[] { Content.Opportunity202407 })
                                    {
                                        <MudSelectItem Value="@content" />
                                    }
                                </MudSelect>
                                @ContentView(_corporateEssentials.Content)
                            </TeamMemberPicker>
                        </Loader>
                    </MudStack>
                </MudTabPanel>
                <MudTabPanel Tag="@Strategy.FaithAndFinance">
                    @ContentView(Content.FaithAndFinance)
                </MudTabPanel>
                <MudTabPanel Tag="@Strategy.RealEstate">
                    <MudText Align="Align.Center">Coming Soon!</MudText>
                </MudTabPanel>
                <MudTabPanel Tag="@Strategy.Latino">
                    <MudText Align="Align.Center">Coming Soon!</MudText>
                </MudTabPanel>
            </StrategyChooser>
        </Collapsable>
    </div>
    <Collapsable Title="Everything Else" ExpandPrompt="Show">
        <MudStack Spacing="6">
            <MudCard Outlined="true">
                <MudCardHeader>
                    <MudText Align="Align.Center" Style="width:100%;">Video Shareable</MudText>
                </MudCardHeader>
                <MudCardContent>
                    <MudStack Spacing="3">
                        @{
                            IEnumerable<Content> GetVideoShareables(IEnumerable<Content> shareables) => shareables.Where(c => UI.EnglishLocale[c] is { Platform: not VideoPlatform.None, ContentId: not Content.Custom });

                            var selectedVideoShareables = GetVideoShareables(GetSelectedContent([_selectedVideoShareableCategory])).ToArray();
                            if (!selectedVideoShareables.Any())
                            {
                                selectedVideoShareables = GetVideoShareables(Constants.OrderedContent).OrderBy(c => ShareableTitle(c)).ToArray();
                            }

                            if (!selectedVideoShareables.Contains(_selectedVideoShareable))
                            {
                                _selectedVideoShareable = selectedVideoShareables.First();
                            }
                        }
                        <MudSelect T="Content" Label="@($"Tap Here! {Constants.JeromePointingDownEmoji}")" @bind-Value="_selectedVideoShareable" ToStringFunc="@(content => ShareableTitle(content))" Variant="MudBlazor.Variant.Outlined" Style="width:300px;">
                            @foreach (var content in selectedVideoShareables)
                            {
                                <MudSelectItem Value="@content"/>
                            }
                        </MudSelect>
                        @ContentView(_selectedVideoShareable)
                        <Centered>
                            <SingleChipSelection TSelection="Category"
                                                 @bind-Selected="_selectedVideoShareableCategory"
                                                 DefaultSelection="Category.All"
                                                 Descriptions="VideoShareableCategories"/>
                        </Centered>
                    </MudStack>
                </MudCardContent>
            </MudCard>
            <Loader Loaded="@(_capturePage.TeamMember != null)">
                <TeamMemberPicker Description="Capture Page For:" @bind-SelectedTeamMember="_capturePage.TeamMember">
                    <MudSelect T="Content" Label="@($"Tap Here! {Constants.JeromePointingDownEmoji}")" @bind-Value="_capturePage.Content" ToStringFunc="@(content => (UI.EnglishLocale[content]?.AppTitle ?? content.ToString()).Replace("<br/>", " "))" Variant="MudBlazor.Variant.Outlined" Style="width:300px;">
                        @foreach (var content in Constants.OrderedContent.Where(c => UI.EnglishLocale[c] is { Platform: not VideoPlatform.None, ContentId: not Content.Custom }))
                        {
                            <MudSelectItem Value="@content" />
                        }
                    </MudSelect>
                    <CapturePage Content="_capturePage.Content" TeamMember="_capturePage.TeamMember" />
                </TeamMemberPicker>
            </Loader>
        </MudStack>
    </Collapsable>
    <Collapsable Title="Independent Business Owners" ExpandPrompt="Show">
        <MudStack>
            <Loader Loaded="@(_selectedTeamMemberMarketingDirector != null)">
                <TeamMemberPicker Description="Shareable For:" @bind-SelectedTeamMember="_selectedTeamMemberMarketingDirector">
                    <ShareableMultilingual Description="Join MWR"
                                                Url="@Constants.JoinMakeWealthReal(_selectedTeamMemberMarketingDirector?.MemberId!, Language.English)"
                                              
                                                EnglishTextToCopy="@($"MWR Sign-up{Environment.NewLine}{Constants.PointingDownEmoji}{Environment.NewLine}{Constants.JoinMakeWealthReal(_selectedTeamMemberMarketingDirector?.MemberId!, Language.English)}{Constants.GetBusinessEnrollmentPromo(_selectedTeamMemberMarketingDirector?.MemberId!)}")"
                                                EnglishTooltip="English shareable copied!"
                                                EnglishImageUrl="@Constants.GetImageUrl(Image.MWRGivBuxLogo)"
                                                
                                                SpanishTextToCopy="@($"MWR Sign-up{Environment.NewLine}{Constants.PointingDownEmoji}{Environment.NewLine}{Constants.JoinMakeWealthReal(_selectedTeamMemberMarketingDirector?.MemberId!, Language.Spanish)}{Constants.GetBusinessEnrollmentPromo(_selectedTeamMemberMarketingDirector?.MemberId!)}")"
                                                SpanishTooltip="Español shareable copied!"
                                                SpanishImageUrl="@Constants.GetImageUrl(Image.MWRGivBuxLogo)" />
                </TeamMemberPicker>
            </Loader>
            <Loader Loaded="@(_selectedTeamMemberWebsite != null)">
                <TeamMemberPicker Description="Shareable For:" @bind-SelectedTeamMember="_selectedTeamMemberWebsite">
                    <ShareableMultilingual Description="My Website"
                                           Url="@Constants.MarketingDirectorUrlEnglish(_selectedTeamMemberWebsite!.MemberId)"
                                           EnglishTextToCopy="@Constants.MarketingDirectorUrlEnglish(_selectedTeamMemberWebsite!.MemberId)"
                                           EnglishTooltip="English shareable copied!"
                                           EnglishImageUrl="@Constants.GetImageUrl(Image.MWRGivBuxLogo)"
                        
                                           SpanishTextToCopy="@Constants.MarketingDirectorUrlSpanish(_selectedTeamMemberWebsite!.MemberId)"
                                           SpanishTooltip="Español shareable copied!"
                                           SpanishImageUrl="@Constants.GetImageUrl(Image.MWRGivBuxLogo)" />
                </TeamMemberPicker>
            </Loader>
            <Fundable360CapturePageShareable/>
            <CardShareableMulti Description="Extra Digit Wealth Worksheet" Url="https://5f35ec78-8acd-4f4f-9b98-5439adb647ec.usrfiles.com/ugd/5f35ec_811dce03aa9c440fbf22bcb2c3d3a602.pdf">
                <Top>
                    <ShareableContent Title="For Prospects" Tooltip="Copied Shareable" ImageUrl="@Constants.GetImageUrl(Image.MWRGivBuxLogo)" TextToCopy="@($"Wealth Worksheet{Environment.NewLine}{Environment.NewLine}Print out before our meeting!{Environment.NewLine}{Constants.PointingDownEmoji}{Environment.NewLine}https://5f35ec78-8acd-4f4f-9b98-5439adb647ec.usrfiles.com/ugd/5f35ec_811dce03aa9c440fbf22bcb2c3d3a602.pdf")" />
                </Top>
                <Bottom>
                    <ShareableContent Title="For QMDs" Tooltip="Copied Shareable" ImageUrl="@Constants.GetImageUrl(Image.MWRGivBuxLogo)" TextToCopy="@($"Wealth Worksheet{Environment.NewLine}{Environment.NewLine}Print out before our meeting!{Environment.NewLine}{Constants.PointingDownEmoji}{Environment.NewLine}https://5f35ec78-8acd-4f4f-9b98-5439adb647ec.usrfiles.com/ugd/5f35ec_05b111199bee4d559058161fc236e7c8.pdf")" />
                </Bottom>
            </CardShareableMulti>
            <ShareableMultilingual Description="Income Goal Simulator"
                                        Url="https://www.mwrfinancial.com/simulator/"

                                        EnglishTextToCopy="@($"MWR Income Goal Simulator{Environment.NewLine}{Constants.PointingDownEmoji}{Environment.NewLine}https://www.mwrfinancial.com/simulator/")"
                                        EnglishTooltip="English shareable copied!"
                                        EnglishImageUrl="@Constants.GetImageUrl(Image.MWRGivBuxLogo)"

                                        SpanishTextToCopy="@($"MWR Income Goal Simulator{Environment.NewLine}{Constants.PointingDownEmoji}{Environment.NewLine}https://www.mwrfinancial.com/es/simulator/")"
                                        SpanishTooltip="Español shareable copied!"
                                        SpanishImageUrl="@Constants.GetImageUrl(Image.MWRGivBuxLogo)" />
            <Shareable Description="MWR Events"
                            Url="http://MakeWealthRealEvents.com"
                            Tooltip="Copied Shareable"
                            TextToCopy="http://MakeWealthRealEvents.com"/>
            <Shareable Description="MWR Corporate Calendar"
                            Url="https://calendar.time.ly/zb6amxcw/posterboard"
                            Tooltip="Copied Shareable"
                            TextToCopy="@($"MWR Corporate Calendar{Environment.NewLine}{Constants.PointingDownEmoji}{Environment.NewLine}https://calendar.time.ly/zb6amxcw/posterboard")"/>
            <Shareable Description="MWR Corporate Telegram Group"
                            Url="https://t.me/+gpFmytqMETExNDUx"
                            Tooltip="Copied Shareable"
                            TextToCopy="@($"MWR Corporate Telegram Group{Environment.NewLine}{Constants.PointingDownEmoji}{Environment.NewLine}https://t.me/+gpFmytqMETExNDUx")"/>
            <Shareable Description=@Constants.AppShareable.Description
                            Tooltip=@Constants.AppShareable.English.Tooltip
                            TextToCopy=@Constants.AppShareable.English.Message
                            ImageUrl=@Constants.AppShareable.ImageUrl/>
            <Shareable Description="@("Mega School App Install Instructions")"
                            Url="@Constants.AppInstallTutorialUrl"
                            Tooltip="Copied!"
                            TextToCopy="@($"Mega School App Install Instructions{Environment.NewLine}{Constants.PointingDownEmoji}{Environment.NewLine}{Constants.AppInstallTutorialUrl}")"
                            ImageUrl="@Constants.GetImageUrl(Image.AppScreenshot)"/>
        </MudStack>
    </Collapsable>
    <Collapsable Title="Team Links" ExpandPrompt="Show">
        <StrategyChooser Label="Team" DefaultStrategy="Strategy.Latino" Strategies="@StrategyChooser.AllStrategies.Except([Strategy.Corporate]).ToArray()">
            <MudTabPanel Tag="@Strategy.MegaSchool">
                <MudText Align="Align.Center">Coming Soon!</MudText>
            </MudTabPanel>
            <MudTabPanel Tag="@Strategy.FaithAndFinance">
                <MudText Align="Align.Center">Coming Soon!</MudText>
            </MudTabPanel>
            <MudTabPanel Tag="@Strategy.RealEstate">
                <MudText Align="Align.Center">Coming Soon!</MudText>
            </MudTabPanel>
            <MudTabPanel Tag="@Strategy.Latino">
                <Shareable Description="Official Facebook Group"
                                Url="https://www.facebook.com/groups/frbeempoweringdiversitynationalteams"
                                Tooltip="Copied!"
                                TextToCopy="@($"FRBE Empowering Diversity National Teams Facebook Group{Environment.NewLine}{Constants.PointingDownEmoji}{Environment.NewLine}https://www.facebook.com/groups/frbeempoweringdiversitynationalteams")" />
            </MudTabPanel>
        </StrategyChooser>
    </Collapsable>
    <Collapsable Title="Images" ExpandPrompt="Show">
        <MudStack>
            <MudText Align="Align.Center">Tap Image to Download</MudText>
            <MudLink Href="@Constants.GetImageUrl(Image.MoneyChallengeLogo)" download>
                <MudImage Fluid="true" Src="@Constants.GetImageUrl(Image.MoneyChallengeLogo)" Alt="MWR 72-Hour Money Challenge" Class="rounded-lg" />
            </MudLink>
            <MudLink Href="@Constants.GetImageUrl(Image.MWRBanner)" download>
                <MudImage Fluid="true" Src="@Constants.GetImageUrl(Image.MWRBanner)" Alt="MWR Banner" Class="rounded-lg" />
            </MudLink>
            <MudLink Href="@Constants.GetImageUrl(Image.MembershipLogo)" download>
                <MudImage Fluid="true" Src="@Constants.GetImageUrl(Image.MembershipLogo)" Alt="MWR Membership Banner" Class="rounded-lg" />
            </MudLink>
            <MudLink Href="@Constants.GetImageUrl(Image.HealthShare)" download>
                <MudImage Fluid="true" Src="@Constants.GetImageUrl(Image.HealthShare)" Alt="MWR HealthShare" Class="rounded-lg" />
            </MudLink>
        </MudStack>
    </Collapsable>
</MudStack>
@code {
    // MWR Corporate Shareables - https://vimeo.com/user/79283490/folder/23946079?isPrivate=false

    private static readonly (Category Category, string Description)[] Categories =
    [
        (Category.Corporate, "Corporate"),
        (Category.MegaSchool, "Mega School"),
        (Category.FaithAndFinance, "Faith & Finance"),
        (Category.RealEstate, "Real Estate"),
        (Category.Ark, "ARK"),
        (Category.BusinessOverview, "Business Overview"),
        (Category.Services, "Services"),
        (Category.GivBux, "GivBux"),
        (Category.Training, "Training"),
    ];

    private static readonly (Category Category, string Description)[] VideoShareableCategories =
    [
        (Category.All, "All"),
        (Category.Fundable360, "Fundable360"),
        (Category.Trusts, "Trusts"),
    ];

    private enum Category
    {
        None = 0,
        Corporate = 1,
        BusinessOverview = 2,
        MegaSchool = 3,
        FaithAndFinance = 5,
        RealEstate = 6,
        Services = 7,
        GivBux = 8,
        Training = 9,
        Ark = 10,
        Trusts = 11,
        Fundable360 = 12,
        All = 100
    }

    private IReadOnlyCollection<Category> _selectedCategories = [Category.Corporate];
    private Category _selectedCategory = Category.Corporate;
    private Category _selectedVideoShareableCategory = Category.None;
    private bool _enableExperimentalFeatures;

    private readonly ShareableViewModel _megaSchoolEssentials = new() { Content = Content.GivBux };
    private readonly ShareableViewModel _corporateEssentials = new() { Content = Content.Opportunity202407 };
    private readonly ShareableViewModel _capturePage = new() { Content = Content.GivBux };

    private readonly (Content Content, Category[] Categories)[] ContentCategories = 
    [
        // Fundable360
        (Content.Fundable360, [Category.Services, Category.Fundable360]),
        (Content.F360Overview, [Category.Services, Category.Fundable360]),
        (Content.F360Testimonial1, [Category.Fundable360]),

        (Content.MWRPique, [Category.Corporate]),
        (Content.CorporateBusinessOverview, [Category.Corporate]),
        (Content.MWRCredibility, [Category.Corporate]),
        (Content.MembershipPique, [Category.Corporate, Category.Services]),
        (Content.Membership, [Category.Corporate, Category.Services]),
        (Content.Membership8min, [Category.Corporate, Category.Services]),
        (Content.Membership7min, [Category.Corporate, Category.Services]),
        (Content.MindsetPique, [Category.Corporate]),
        (Content.MWR30SecTeaser, [Category.Corporate]),
        (Content.MWR60SecTeaser, [Category.Corporate]),
        (Content.MWR60SecTeaser2, [Category.Corporate]),
        (Content.MWR60SecTeaser3, [Category.Corporate]),
        (Content.MWR2MinTeaser1, [Category.Corporate]),
        (Content.MilitaryPique, [Category.Corporate]),
        (Content.MLMPique, [Category.Corporate]),
        (Content.MWR30SecReel, [Category.Corporate]),
        (Content.MoneyChallenge, [Category.Corporate]),
        (Content.Promo, [Category.Corporate]),
        (Content.CorporateBusinessOverview, [Category.Corporate, Category.BusinessOverview]),
        (Content.NextLevelStrategies, [Category.Corporate]),
        
        (Content.Ace, [Category.MegaSchool]),
        (Content.BizToolkit, [Category.MegaSchool]),
        (Content.CollegeFundingPique, [Category.MegaSchool]),
        (Content.BizOwnerPique, [Category.MegaSchool]),
        (Content.BitcoinPreview, [Category.MegaSchool]),
        (Content.PrisonMinistry, [Category.MegaSchool]),
        (Content.Taxed5Percent, [Category.MegaSchool]),
        (Content.CollegeFund, [Category.MegaSchool, Category.BusinessOverview]),
        
        (Content.FaithAndFinanceTeaser, [Category.FaithAndFinance]),
        (Content.FaithAndFinance, [Category.FaithAndFinance]),
        (Content.FaithAndFinanceOverview, [Category.FaithAndFinance, Category.BusinessOverview]),
        
        (Content.RealEstatePros, [Category.RealEstate]),
        (Content.RealEstateProsExt, [Category.RealEstate]),

        (Content.HBBTaxBenefits, [Category.Ark]),

        // services
        (Content.EliminateMyDebtExplainer, [Category.Services]),
        (Content.InstantPayRaise, [Category.Services]),
        (Content.LowerMyBills, [Category.Services]),
        (Content.HealthShare, [Category.Services]),
        (Content.CreditRestoration, [Category.Services, Category.RealEstate]),
        (Content.StudentLoanDebtRelief, [Category.Services]),
        (Content.KeysToHomeOwnership, [Category.Services, Category.RealEstate]),
        (Content.MyRewards, [Category.Services]),
        (Content.HowBanksMakeMoney, [Category.Services]),
        (Content.PayoffMortgage, [Category.Services]),
        (Content.CarPayoff1, [Category.Services]),
        (Content.CarPayoff2, [Category.Services]),
        (Content.WhatWealthyDo, [Category.Services]),
        (Content.HappyRetirement, [Category.Services]),
        (Content.DCAExplainer1, [Category.Services]),
        (Content.PRA, [Category.Services]),
        (Content.PreciousMetals, [Category.Services]),
        (Content.TrustPodcast1, [Category.Services, Category.Trusts]),
        (Content.TrustMyAssets, [Category.Services, Category.Trusts]),
        (Content.ProtectMyAssets, [Category.Services, Category.Trusts]),
        (Content.StructureMyLegacy, [Category.Services, Category.Trusts]),
        (Content.InvestmentsExplainer, [Category.Services]),
        (Content.Share360Explainer, [Category.Services]),

        // GivBux
        (Content.GivBux, [Category.GivBux]),
        (Content.GivBuxAccountSetup, [Category.GivBux]),
        (Content.GivBuxCharity, [Category.GivBux]),
        (Content.GivBuxMerchant, [Category.GivBux]),
        (Content.GivBuxFundraiser, [Category.GivBux, Category.MegaSchool, Category.BusinessOverview]),
        (Content.GivBuxUberDemo, [Category.GivBux]),

        // Training
        (Content.MegaSchoolAppInstall, [Category.Training]),
        (Content.Fundable360Training, [Category.Training, Category.Fundable360]),
        (Content.DebtDemo, [Category.Training]),
        (Content.MembershipOrientation, [Category.Training]),
        (Content.FastStart, [Category.Training]),
        
        // trusts
        (Content.TrustBenefits, [Category.Trusts]),
        (Content.TrustJurisdiction, [Category.Trusts]),
        (Content.TrustDefined, [Category.Trusts]),
        (Content.Taxed5Percent, [Category.Trusts]),
        (Content.EstatePlanning, [Category.Trusts]),
    ];
    
    private readonly Content[] Fundable360Shareables = [Content.Fundable360, Content.F360Overview, Content.BusinessFundingPique, Content.CollegeFundingPique, Content.CollegeFund, Content.F360Testimonial1];
    
    private Content _selectedVideoShareable = Content.MoneyChallenge;
    private TeamMember? _selectedTeamMemberMarketingDirector;
    private TeamMember? _selectedTeamMemberWebsite;
    private Content _selectedShareable = Content.MWRPique;
    private Content _selectedInCompleteVideoLibrary = Content.MoneyChallenge;
    
    private IEnumerable<Content> GetSelectedContent(Category[] selectedCategories)
    {
        return ContentCategories
            .Where(c => selectedCategories.Contains(Category.All) || !selectedCategories.Any() || !selectedCategories.Except(c.Categories).Any())
            .Select(c => c.Content);
    }
    
    private void SelectedCategoriesChanged(IReadOnlyCollection<Category>? selectedCategories)
    {
        _selectedCategories = selectedCategories!;

        var selectedContents = GetSelectedContent(_selectedCategories?.ToArray() ?? []).ToArray();

        _selectedShareable = selectedContents.Any() ? selectedContents.First() : Content.MWRPique;
    }
    
    private void SelectedCategoryChanged(Category selectedCategory)
    {
        _selectedCategory = selectedCategory;

        var selectedContents = GetSelectedContent(_selectedCategory != Category.None ? [_selectedCategory] : []).ToArray();

        _selectedShareable = selectedContents.Any() ? selectedContents.First() : Content.MWRPique;
    }

    protected override void OnParametersSet()
    {
        _selectedTeamMemberMarketingDirector = AppState?.User;
        _selectedTeamMemberWebsite = AppState?.User;

        _megaSchoolEssentials.TeamMember = AppState?.User;
        _capturePage.TeamMember = AppState?.User;
        _corporateEssentials.TeamMember = AppState?.User;
    }

    protected override async Task OnInitializedAsync()
    {
        _enableExperimentalFeatures = await FeatureManager.IsEnabledAsync("Experimental");
    }

    private string ShareableTitle(Content content) => (UI.EnglishLocale[content]?.AppTitle ?? content.ToString()).Replace("<br/>", " ");

    private RenderFragment ContentView(Content content) => __builder =>
    {
        <ShareableVideo Content="content"/>
    };
    
    private class ShareableViewModel
    {
        public Content Content { get; set; }
        public TeamMember? TeamMember { get; set; }
    }
}
