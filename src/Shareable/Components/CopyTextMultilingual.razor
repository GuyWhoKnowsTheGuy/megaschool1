@inherits ComponentBase
@inject IJSRuntime JSRuntime

<MudStack Row="true">
    <MudSpacer />
    <MudText Align="Align.Center">
        @this.Description
        <br />
        <MudTooltip Text="@EnglishTooltip" IsVisible="_showEnglishTooltip" ShowOnClick="true" ShowOnFocus="false" ShowOnHover="false">
            <MudButton OnClick="OnEnglishCopyClick" EndIcon="@Icons.Material.Filled.ContentCopy" Variant="Variant.Text" Color="Color.Primary">English</MudButton>
        </MudTooltip>
        |
        <MudTooltip Text="@SpanishTooltip" IsVisible="_showSpanishTooltip" ShowOnClick="true" ShowOnFocus="false" ShowOnHover="false">
            <MudButton OnClick="OnSpanishCopyClick" EndIcon="@Icons.Material.Filled.ContentCopy" Variant="Variant.Text" Color="Color.Primary">Español</MudButton>
        </MudTooltip>
    </MudText>
    <MudSpacer />
</MudStack>

@code {
    private bool _showEnglishTooltip = false;
    private bool _showSpanishTooltip = false;

    [Parameter]
    public string Description { get; set; }

    [Parameter]
    public string EnglishTextToCopy { get; set; }

    [Parameter]
    public string SpanishTextToCopy { get; set; }

    [Parameter]
    public string EnglishTooltip { get; set; }

    [Parameter]
    public string SpanishTooltip { get; set; }

    private async Task OnEnglishCopyClick()
    {
        await this.CopyTextToClipboardAsync(this.EnglishTextToCopy);

        _showEnglishTooltip = true;
        base.StateHasChanged();

        await Task.Delay(3 * 1000);

        _showEnglishTooltip = false;
        base.StateHasChanged();
    }

    private async Task OnSpanishCopyClick()
    {
        await this.CopyTextToClipboardAsync(this.SpanishTextToCopy);

        _showSpanishTooltip = true;
        base.StateHasChanged();

        await Task.Delay(3 * 1000);

        _showSpanishTooltip = false;
        base.StateHasChanged();
    }
}
